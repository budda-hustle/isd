<!DOCTYPE html>
<!-- saved from url=(0046)http://gojs.net/latest/samples/familyTree.html -->
<html class="gr__gojs_net">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  <title>Family Tree</title>
  <meta name="description" content="A family tree diagram of British royalty.">
  <!-- Copyright 1998-2016 by Northwoods Software Corporation. -->

  <script src="./Family Tree (British)_files/go.js"></script>
  <script src="./Family Tree (British)_files/go(1).js"></script>
  
  <script id="code">
    function init() {
      var $ = go.GraphObject.make;  // for conciseness in defining templates

      myDiagram =
        $(go.Diagram, "myDiagramDiv",  // must be the ID or reference to div
          {
            "toolManager.hoverDelay": 100,  // 100 milliseconds instead of the default 850
            allowCopy: false,
            layout:  // create a TreeLayout for the family tree
              $(go.TreeLayout,
                { angle: 90, nodeSpacing: 10, layerSpacing: 40, layerStyle: go.TreeLayout.LayerUniform })
          });

      var bluegrad = '#90CAF9';
      var pinkgrad = '#F48FB1';

      // Set up a Part as a legend, and place it directly on the diagram
      myDiagram.add(
        $(go.Part, "Table",
          { position: new go.Point(0, -30), selectable: false },
          $(go.TextBlock, "Стать",
            { row: 0, font: "700 14px Droid Serif, sans-serif" }),  // end row 0
          $(go.Panel, "Horizontal",
            { row: 1, alignment: go.Spot.Left },
            $(go.Shape, "Rectangle",
              { desiredSize: new go.Size(30, 30), fill: bluegrad, margin: 5 }),
            $(go.TextBlock, "Чоловіки",
              { font: "700 13px Droid Serif, sans-serif" })
          ),  // end row 1
          $(go.Panel, "Horizontal",
            { row: 2, alignment: go.Spot.Left },
            $(go.Shape, "Rectangle",
              { desiredSize: new go.Size(30, 30), fill: pinkgrad, margin: 5 }),
            $(go.TextBlock, "Жінки",
              { font: "700 13px Droid Serif, sans-serif" })
          )  // end row 2
        ));

      // get tooltip text from the object's data
      function tooltipTextConverter(person) {
        var str = "";
        str += "Рік народження: " + person.birthYear;
        if (person.deathYear !== undefined) str += "\nDied: " + person.deathYear;
        if (person.reign !== undefined) str += "\nReign: " + person.reign;
        return str;
      }

      // define tooltips for nodes
      var tooltiptemplate =
        $(go.Adornment, "Auto",
          $(go.Shape, "Rectangle",
            { fill: "whitesmoke", stroke: "black" }),
          $(go.TextBlock,
            { font: "bold 8pt Helvetica, bold Arial, sans-serif",
              wrap: go.TextBlock.WrapFit,
              margin: 5 },
            new go.Binding("text", "", tooltipTextConverter))
        );

      // define Converters to be used for Bindings
      function genderBrushConverter(gender) {
        if (gender === "M") return bluegrad;
        if (gender === "F") return pinkgrad;
        return "orange";
      }

      // replace the default Node template in the nodeTemplateMap
      myDiagram.nodeTemplate =
        $(go.Node, "Auto",
          { deletable: false, toolTip: tooltiptemplate },
          new go.Binding("text", "name"),
          $(go.Shape, "Rectangle",
            { fill: "lightgray",
              stroke: null, strokeWidth: 0,
              stretch: go.GraphObject.Fill,
              alignment: go.Spot.Center },
            new go.Binding("fill", "gender", genderBrushConverter)),
          $(go.TextBlock,
            { font: "700 12px Droid Serif, sans-serif",
              textAlign: "center",
              margin: 10, maxSize: new go.Size(80, NaN) },
            new go.Binding("text", "name"))
        );

      // define the Link template
      myDiagram.linkTemplate =
        $(go.Link,  // the whole link panel
          { routing: go.Link.Orthogonal, corner: 5, selectable: false },
          $(go.Shape, { strokeWidth: 3, stroke: '#424242' }));  // the gray link shape

      // here's the family data
      var nodeDataArray = [
        { key: 0, name: "Пращур Микита", gender: "M", birthYear: "1865", deathYear: "1936", reign: "1910-1936" },
          { key: 1, parent: 0, name: "1 син Микити", gender: "M", birthYear: "1894", deathYear: "1972", reign: "1936" },
          { key: 2, parent: 0, name: "2 син Микити", gender: "M", birthYear: "1895", deathYear: "1952", reign: "1936-1952" },
            
            { key: 7, parent: 2, name: "Прабабця Катя", gender: "F", birthYear: "1926", reign: "1952-" },
              { key: 16, parent: 7, name: "Семюель Джексон", gender: "M", birthYear: "1948" },
                { key: 38, parent: 16, name: "Віл Сміт", gender: "M", birthYear: "1982" },
                { key: 39, parent: 16, name: "Барак Обама", gender: "M", birthYear: "1984" },
              { key: 18, parent: 7, name: "Путін", gender: "M", birthYear: "1960" },
                { key: 42, parent: 18, name: "Путін", gender: "M", birthYear: "1988" },
                { key: 43, parent: 18, name: "Путін", gender: "M", birthYear: "1990" },
            
            { key: 8, parent: 2, name: "Рандомна жінка", gender: "F", birthYear: "1930", deathYear: "2002" },
              { key: 20, parent: 8, name: "Рандомна дитина", gender: "F", birthYear: "1961" },
              { key: 21, parent: 8, name: "Рандомна дитина", gender: "F", birthYear: "1964" },
      ];

      // create the model for the family tree
      myDiagram.model = new go.TreeModel(nodeDataArray);

      document.getElementById('zoomToFit').addEventListener('click', function() {
        myDiagram.zoomToFit();
      });

      document.getElementById('centerRoot').addEventListener('click', function() {
        myDiagram.scale = 1;
        myDiagram.scrollToRect(myDiagram.findNodeForKey(0).actualBounds);
      });

    }
  </script>
</head>



<body onload="init()" data-gr-c-s-loaded="true">
  <div id="sample">
  <div id=qunit-fixture>
    
  </div>
    <h3>Family Tree</h3>
    <div id="myDiagramDiv" style="background-color: white; border: 1px solid black; width: 100%; height: 550px; position: relative; -webkit-tap-highlight-color: rgba(255, 255, 255, 0); cursor: auto;">
        <canvas tabindex="0" width="1124" height="539" style="position: absolute; top: 0px; left: 0px; z-index: 2; user-select: none; width: 1124px; height: 539px; cursor: auto;">This text is displayed if your browser does not support the Canvas HTML element.</canvas>
            <div style="position: absolute; overflow: auto; width: 1124px; height: 550px; z-index: 1;">
              <div style="position: absolute; width: 4113.24px; height: 1px;">
              
              </div>
            </div>
    </div>
  </div>
</body>
</html>